# AI Feedback Platform - Environment Variables

# Application Environment
# Set to 'production' for production environments
# When set to 'production', Redis/BullMQ will be enabled by default
NODE_ENV=development

# Database Connection
# PostgreSQL connection URL (takes precedence over individual parameters)
DATABASE_URL=postgres://username:password@localhost:5432/database_name
# Individual PostgreSQL connection parameters (used if DATABASE_URL is not set)
PGHOST=localhost
PGPORT=5432
PGUSER=postgres
PGPASSWORD=postgres
PGDATABASE=ai_feedback

# Redis Configuration
# Set to 'true' to enable Redis and BullMQ even in non-production environments
# This is useful for testing the queue in development
ENABLE_REDIS=false

# Redis connection URL (takes precedence over individual parameters)
REDIS_URL=redis://username:password@localhost:6379

# Individual Redis connection parameters (used if REDIS_URL is not set)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_USERNAME=
REDIS_DB=0

# AI API Keys
# At least one of these should be set for AI feedback generation
# If both are provided, Gemini will be used by default
GEMINI_API_KEY=your_gemini_api_key
OPENAI_API_KEY=your_openai_api_key

# Session Configuration
# REQUIRED: A secure random string used to sign session cookies
# This MUST be set to a strong, unique, random value at least 32 characters long
# For production: Run this command to generate a secure random value:
#   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=

# Security
# REQUIRED: Secret key for CSRF protection
# This MUST be set to a strong, unique, random value at least 32 characters long
# For production: Run this command to generate a secure random value:
#   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
CSRF_SECRET=

# Other Configuration
# Maximum file upload size in bytes (default: 10MB)
MAX_UPLOAD_SIZE=10485760