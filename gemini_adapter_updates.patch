diff --git a/server/adapters/gemini-adapter.ts b/server/adapters/gemini-adapter.ts
index c93746a..b9cde7c 100644
--- a/server/adapters/gemini-adapter.ts
+++ b/server/adapters/gemini-adapter.ts
@@ -306,7 +306,12 @@ export class GeminiAdapter implements AIAdapter {
         parsedContent._totalTokens = tokenCount;
         
         console.log(`[GEMINI] Successfully parsed response JSON (${raw.length} chars)`);
-        return parsedContent;
+        return {
+          ...parsedContent,
+          modelName: this.modelName,
+          rawResponse: JSON.parse(raw),
+          tokenCount: tokenCount || 0
+        };
       } catch (error) {
         console.error(`[GEMINI] Failed to parse response JSON: ${error instanceof Error ? error.message : String(error)}`);
         
@@ -454,7 +459,12 @@ export class GeminiAdapter implements AIAdapter {
         parsedContent._totalTokens = tokenCount;
         
         console.log(`[GEMINI] Successfully parsed response JSON (${raw.length} chars)`);
-        return parsedContent;
+        return {
+          ...parsedContent,
+          modelName: this.modelName,
+          rawResponse: JSON.parse(raw),
+          tokenCount: tokenCount || 0
+        };
       } catch (error) {
         console.error(`[GEMINI] Failed to parse response JSON: ${error instanceof Error ? error.message : String(error)}`);
         
@@ -470,7 +480,12 @@ export class GeminiAdapter implements AIAdapter {
             parsedContent._totalTokens = tokenCount;
             
             console.log(`[GEMINI] Successfully repaired and parsed JSON response`);
-            return parsedContent;
+            return {
+              ...parsedContent,
+              modelName: this.modelName,
+              rawResponse: JSON.parse(repairedJson),
+              tokenCount: tokenCount || 0
+            };
           } catch (repairError) {
             console.error(`[GEMINI] Repair attempt failed: ${repairError instanceof Error ? repairError.message : String(repairError)}`);
           }
